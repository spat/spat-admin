//- 一覧用パーツ
admin-module-list
  div.h80.f.fr.fm.p16.border-bottom(show='{schema.search !== false}')
    input.input(ref='search', type='search', placeholder='Search', oninput='{debouncedFetch}')
  table.table-layout-fixed.w-full.border-spacing-0.border-collapse-collapse
    thead
      tr
        th.border-bottom(each='{heading in schema.headings}', style='width: {heading.width}')
          div.w-full.text-left.fs11.text-gray.px12.py16.bold {heading.label}
    tbody
      tr.border-bottom.hover-trigger.hover-bg-dark.cursor-pointer(each='{item in items}', onclick='{onSelect}')
        td.p12(each='{heading in schema.headings}')
          div.fs13(data-is='admin-item-{heading.type}', value='{admin.utils.$get(item, heading.key)}', heading='{heading}')
  //-  もっと見る
  div.f.fh.py10(if='{next_cursor}')
    button.button(onclick='{fetch}') もっと見る

  style(type='less').
    :scope {
      display: block;
    }

  script.
    this.setup = async ({path}) => {
      this.items = [];
      this.nextCursor = '';
      
      // schema を取得
      // collection もしくは collection/id に一致するスキーマ
      var schema_path = path.split('/').filter((path, index) => { return index%2 === 0; } ).join('.'); // id を取り除く
      var schema = admin.utils.$get(app.admin.schema, schema_path) || app.admin.schema[this.collection+'/'+this.id];
      this.schema = schema;

      this.path = path;

      await this.fetch();
    };

    this.getList = () => {
      var list = Object.assign(app.admin);
    };

    this.onSelect = (e) => {
      // デフォルトはルートパス
      const root = opts.root || '/';

      // イベント発火
      this.trigger('select', {
        item: e.item.item,
      });

      //- 遷移
      spat.router.push(`${root}${e.item.item.path}`);
    };

    this.fetch = async () => {
      var query = this.refs.search.value;
      var {items, next_cursor} = await app.admin.crud.index({path: this.path, keyword: query, cursor: this.next_cursor});
      this.items.push(...items);
      this.next_cursor = next_cursor;
      this.update();
    };

    this.debouncedFetch = _.debounce((e) => {
      this.fetch();
    }, 100);
