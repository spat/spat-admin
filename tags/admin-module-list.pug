//- 一覧用パーツ
admin-module-list
  table.table-layout-fixed.w-full.border-spacing-0.border-collapse-collapse
    thead
      tr
        th.border-bottom(each='{heading in schema.headings}', style='width: {heading.width}')
          div.w-full.text-center.fs11.text-gray.py16 {heading.label}
    tbody
      tr.border-bottom.hover-trigger.hover-bg-dark.cursor-pointer(each='{item in items}', onclick='{onSelect}')
        td.p12(each='{heading in schema.headings}')
          div.fs13(data-is='admin-item-{heading.type}', value='{admin.utils.$get(item, heading.key)}', heading='{heading}')

  style(type='less').
    :scope {
      display: block;
    }

  script.
    this.setup = async ({path}) => {
      // schema を取得
      // collection もしくは collection/id に一致するスキーマ
      var schema_path = path.split('/').filter((path, index) => { return index%2 === 0; } ).join('.'); // id を取り除く
      var schema = admin.utils.$get(app.admin.schema, schema_path) || app.admin.schema[this.collection+'/'+this.id];
      this.schema = schema;

      var items = await app.admin.crud.index({path});

      this.items = items;
      this.update();
    };

    this.getList = () => {
      var list = Object.assing(app.admin)
    };

    this.onSelect = (e) => {
      // デフォルトはルートパス
      const root = opts.root || '/';

      // イベント発火
      this.trigger('select', {
        item: e.item.item,
      });

      //- 遷移
      spat.router.push(`${root}${e.item.item.path}`);
    };
  